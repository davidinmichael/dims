# Generated by Django 5.0.6 on 2024-07-09 14:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('student', 'Student'), ('admin', 'Admin')], default='student', max_length=10)),
                ('rank', models.CharField(blank=True, max_length=50, null=True)),
                ('academic_position', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('state_of_origin', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='users/')),
                ('active_status', models.BooleanField(default=True)),
                ('marital_status', models.CharField(blank=True, max_length=50, null=True)),
                ('social_handles', models.JSONField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('matric_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('level_year', models.IntegerField(blank=True, null=True)),
                ('religion', models.CharField(blank=True, max_length=50, null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_courses', models.IntegerField(blank=True, null=True)),
                ('current_semester_courses', models.JSONField(blank=True, null=True)),
                ('current_cgpa', models.FloatField(blank=True, null=True)),
                ('lecturer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('lecturer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('availability_status', models.BooleanField(blank=True, default=True, null=True)),
                ('course_title', models.CharField(blank=True, max_length=200, null=True)),
                ('course_unit', models.IntegerField(blank=True, null=True)),
                ('lecture_day_time', models.DateTimeField(blank=True, null=True)),
                ('course_code', models.CharField(blank=True, max_length=50, null=True)),
                ('examination_courses', models.JSONField(blank=True, null=True)),
                ('year_semester', models.CharField(blank=True, max_length=20, null=True)),
                ('search', models.CharField(blank=True, max_length=100, null=True)),
                ('lecturer_info', models.JSONField(blank=True, null=True)),
                ('score_grade', models.JSONField(blank=True, null=True)),
                ('tlu_present', models.FloatField(blank=True, null=True)),
                ('tlu_previous', models.FloatField(blank=True, null=True)),
                ('cumulative_gpa', models.FloatField(blank=True, null=True)),
                ('current_level', models.IntegerField(blank=True, null=True)),
                ('current_semester', models.IntegerField(blank=True, null=True)),
                ('outstanding_courses', models.JSONField(blank=True, null=True)),
                ('courses', models.JSONField(blank=True, null=True)),
                ('exams', models.JSONField(blank=True, null=True)),
                ('event_title', models.CharField(blank=True, max_length=200, null=True)),
                ('event_description', models.TextField(blank=True, null=True)),
                ('event_date_time', models.DateTimeField(blank=True, null=True)),
                ('contact_first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_message', models.TextField(blank=True, null=True)),
                ('office_school_address', models.CharField(blank=True, max_length=200, null=True)),
                ('whatsapp_dept_number', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, null=True)),
                ('sign_in_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('sign_in_password', models.CharField(blank=True, max_length=128, null=True)),
                ('sign_in_matric_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
